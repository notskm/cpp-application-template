name: Build

on:
  push:
    branches:
      - master
      - release/**
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
        cppstd: [17]
        arch-target: [x86_64]

        config:
          - os: "windows-latest"
            os-target: Windows
            conan-compiler: Visual Studio
            cxx-compiler: cl
            c-compiler: cl
            compiler-version: "16"
            libcxx: ""
            runtime: MDd

          - os: "ubuntu-latest"
            os-target: Linux
            conan-compiler: gcc
            cxx-compiler: g++-10
            c-compiler: gcc-10
            compiler-version: "10"
            libcxx: libstdc++11
            runtime: ""

          - os: "ubuntu-latest"
            os-target: Linux
            conan-compiler: clang
            cxx-compiler: clang++-12
            c-compiler: clang-12
            compiler-version: "12"
            libcxx: libstdc++11
            runtime: ""

          - os: "macos-latest"
            os-target: Macos
            conan-compiler: apple-clang
            cxx-compiler: clang++
            c-compiler: clang
            compiler-version: "12.0"
            libcxx: libc++
            runtime: ""

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v1

      - name: Install C++ Problem Matchers
        uses: Trass3r/setup-cpp@master

      - uses: actions/setup-python@v1

      - name: Install Conan
        run: |
          pip3 install conan
          conan --version

      - name: Create Conan Profiles
        shell: bash
        run: |
          conan profile new default --detect
          conan profile update settings.os_build="${{ matrix.config.os-target }}" default
          conan profile update settings.arch_build="${{ matrix.arch-target }}" default
          conan profile update settings.compiler="${{ matrix.config.conan-compiler }}" default
          conan profile update settings.compiler.version="${{ matrix.config.compiler-version }}" default
          conan profile update settings.compiler.cppstd="${{ matrix.cppstd }}" default
          conan profile update settings.build_type="${{ matrix.build-type }}" default
          conan profile update env.CC="${{ matrix.config.c-compiler }}" default
          conan profile update env.CXX="${{ matrix.config.cxx-compiler }}" default

          if [ "${{ matrix.config.libcxx }}" != "" ]; then
            conan profile update settings.compiler.libcxx="${{ matrix.config.libcxx }}" default
          fi

          if [ "${{ matrix.config.runtime }}" != "" ]; then
            conan profile update settings.compiler.runtime="${{ matrix.config.runtime }}" default
          fi

      - name: Create Build Directory
        run: mkdir build

      - name: Build and Install Dependencies
        run: conan install .. --build missing -pr default
        working-directory: build

      - name: Build
        shell: pwsh
        run: |
          ./activate.ps1
          ./activate_build.ps1

          which cmake
          cmake --version

          cmake .. -DCMAKE_BUILD_TYPE:STRING="${{ matrix.build-type }}" -DBUILD_TESTS=ON -DWARNINGS_AS_ERRORS=ON -DRUN_CONAN=OFF -DCMAKE_TOOLCHAIN_FILE="./conan_toolchain.cmake"
          cmake --build . --config "${{ matrix.build-type }}"
        working-directory: build

      - name: Test
        run: ctest --output-on-failure -C "${{ matrix.build-type }}"
        working-directory: build
